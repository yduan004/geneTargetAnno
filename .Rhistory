?tracks
library(ggbio)
library(systemPipeR)
run_edgeR()
run_edgeR
degList <- readRDS("./results/degList.rds")
names(degList)
cmg <- readLines("./data/common_genes.txt")
common_genes <- readLines("./data/common_genes.txt")
class(degList$logFC)
library(tidyverse)
deg_logFC <- as_tibble(degList$logFC)
deg_logFC
deg_logFC <- as.data.frame(degList$logFC)
deg_logFC[1:4,1:4]
deg_logFC_cmg <- deg_logFC[common_genes,]
deg_fdr <- as.data.frame(degList$FDR) # 12437 X 322
deg_fdr_cmg <- deg_fdr[common_genes,] # 11992 X 322
deg_fdr[1:4,1:4]
a <- deg_logFC[1:4,1:4]
a[order(a[,1]),]
a[order(a[,1], decreasing = TRUE),]
cmap_sig <- list()
cmap_sig
class(deg_fdr_cmg[,1])
b <- a[,1]
b
names(b) <- names(a)
b
order(b)
b[order(b)]
names(b) <- rownames(a)
b
as.list(b)
as.list(b = b)
list(b = b)
top(b, 2)
?select
b
rev(b)
a <- list(a = c("name","is"))
b <- list(b = c("yuzhu", "duan"))
a
b
c <- list(c = c(a,b))
c
length(c)
names(c[[1]])
c[[1]]
c[[1]][[1]]
c[[1]][[2]]
c[[1]][1]
c <- list(up = c("adsf"), down = c("d","asdf"))
c
names(c)
d <- list(up = c("adsf"), down = c("d","asdf"))
e <- c(c,d)
e
names(e)
cmap_sig <- list()
for(name in colnames(deg_logFC_cmg)){
name_sub <- subset("_MCF7", "", name)
fdr_l <- deg_fdr_cmg[,name] <= 0.5
logfc <- deg_logFC_cmg[,name][fdr_l]
names(logfc) <- rownames(deg_logFC_cmg)[fdr_l]
logfc_order <- logfc[order(logfc, decreasing = TRUE)]
logfc_order_up <- logfc_order[logfc_order >= 1]
logfc_order_down <- logfc_order[logfc_order <= 1]
if(length(logfc_order_up) > 100) logfc_order_up <- logfc_order_up[1:100]
if(length(logfc_order_down) > 100) logfc_order_down <- rev(logfc_order_down)[1:100]
up <- list(up = names(logfc_order_up))
down <- list(down = names(logfc_order_down))
up_down <- list(up_down = c(names(logfc_order_up), names(logfc_order_down)))
druglist <- list(drug = c(up, down, up_down))
names(druglist) <- name_sub
cmap_sig <- c(cmap_sig, druglist)
return(cmap_sig)
}
for(name in colnames(deg_logFC_cmg)){
name_sub <- sub("_MCF7", "", name)
fdr_l <- deg_fdr_cmg[,name] <= 0.5
logfc <- deg_logFC_cmg[,name][fdr_l]
names(logfc) <- rownames(deg_logFC_cmg)[fdr_l]
logfc_order <- logfc[order(logfc, decreasing = TRUE)]
logfc_order_up <- logfc_order[logfc_order >= 1]
logfc_order_down <- logfc_order[logfc_order <= 1]
if(length(logfc_order_up) > 100) logfc_order_up <- logfc_order_up[1:100]
if(length(logfc_order_down) > 100) logfc_order_down <- rev(logfc_order_down)[1:100]
up <- list(up = names(logfc_order_up))
down <- list(down = names(logfc_order_down))
up_down <- list(up_down = c(names(logfc_order_up), names(logfc_order_down)))
druglist <- list(drug = c(up, down, up_down))
names(druglist) <- name_sub
cmap_sig <- c(cmap_sig, druglist)
return(cmap_sig)
}
for(name in colnames(deg_logFC_cmg)){
name_sub <- sub("_MCF7", "", name)
fdr_l <- deg_fdr_cmg[,name] <= 0.5
logfc <- deg_logFC_cmg[,name][fdr_l]
names(logfc) <- rownames(deg_logFC_cmg)[fdr_l]
logfc_order <- logfc[order(logfc, decreasing = TRUE)]
logfc_order_up <- logfc_order[logfc_order >= 1]
logfc_order_down <- logfc_order[logfc_order <= 1]
if(length(logfc_order_up) > 100) logfc_order_up <- logfc_order_up[1:100]
if(length(logfc_order_down) > 100) logfc_order_down <- rev(logfc_order_down)[1:100]
up <- list(up = names(logfc_order_up))
down <- list(down = names(logfc_order_down))
up_down <- list(up_down = c(names(logfc_order_up), names(logfc_order_down)))
druglist <- list(drug = c(up, down, up_down))
names(druglist) <- name_sub
cmap_sig <- c(cmap_sig, druglist)
}
cmap_sig[[1]]
cmap_sig <- list(NULL)
cmap_sig
a
c(cmap_sig,a)
cmap_sig <- NULL
c(cmap_sig,a)
cmap_sig <- NULL
for(name in colnames(deg_logFC_cmg)){
name_sub <- sub("_MCF7", "", name)
fdr_l <- deg_fdr_cmg[,name] <= 0.5
logfc <- deg_logFC_cmg[,name][fdr_l]
names(logfc) <- rownames(deg_logFC_cmg)[fdr_l]
logfc_order <- logfc[order(logfc, decreasing = TRUE)]
logfc_order_up <- logfc_order[logfc_order >= 1]
logfc_order_down <- logfc_order[logfc_order <= 1]
if(length(logfc_order_up) > 100) logfc_order_up <- logfc_order_up[1:100]
if(length(logfc_order_down) > 100) logfc_order_down <- rev(logfc_order_down)[1:100]
up <- list(up = names(logfc_order_up))
down <- list(down = names(logfc_order_down))
up_down <- list(up_down = c(names(logfc_order_up), names(logfc_order_down)))
druglist <- list(drug = c(up, down, up_down))
names(druglist) <- name_sub
cmap_sig <- c(cmap_sig, druglist)
}
cmap_sig[[1]]
cmap_sig[[2]]
cmap_sig[[3]]
cmap_sig[[4]]
degMA <- read_tsv("./results/degMA.xls") # 12437 X 322
degCount <- colSums(select(degMA, -X1))
degC
degCount[1:3]
degList <- runLimma(df=rmadf_df, comp_list, fdr=0.50, foldchange=1, verbose=TRUE, affyid=NULL)
library(longevityTools)
rmadf_df <- readRDS("data/rmadf_df.rds") # data.frame: 12437 7056
comp_list <- sampleList(cmap, myby="CMP_CELL") # 3587
cmap <- read.delim("./data/cmap_instances_02.txt", check.names=FALSE) # 6100 15
library(longevityTools)
comp_list <- sampleList(cmap, myby="CMP_CELL") # 3587
sum(lc_drugs==tolower(lc_drugs)) # 646, all lc_drugs are lower case
lc_drugs <- readLines("data/lc_drugs.txt") # 646
comp_list <- comp_list[tolower(names(comp_list)) %in% tolower(paste0(lc_drugs, "_MCF7"))] # 329
comp_list <- comp_list[tolower(names(comp_list)) %in% tolower(paste0(lc_drugs, "_MCF7"))] # 329
comp_list <- sampleList(cmap, myby="CMP_CELL") # 3587
comp_list <- comp_list[tolower(names(comp_list)) %in% tolower(paste0(lc_drugs, "_MCF7"))] # 329
names(comp_list)[1:4]
setwd("~/project/hl/cmap_microarray_vs_lincs_L1000_data/")
lc_drugs <- readLines("data/lc_drugs.txt") # 646
sum(lc_drugs==tolower(lc_drugs)) # 646, all lc_drugs are lower case
cmap <- read.delim("./data/cmap_instances_02.txt", check.names=FALSE) # 6100 15
library(longevityTools)
comp_list <- sampleList(cmap, myby="CMP_CELL") # 3587
names(comp_list)[1:4]
comp_list <- comp_list[tolower(names(comp_list)) %in% tolower(paste0(lc_drugs, "_MCF7"))] # 643
names(comp_list)[1:10]
length(unique(names(comp_list)))
lc_drugs_sig <- sub("_MCF7","",names(comp_list))
writeLines(lc_drugs_sig, "./data/lc_drugs_sig.txt")
lc_drugs_sig <- readLines("./data/lc_drugs_sig.txt") # 329
degList <- runLimma(df=rmadf_df, comp_list, fdr=0.50, foldchange=1, verbose=TRUE, affyid=NULL)
write.table(degList$DEG, file="./results/degMA.xls", quote=FALSE, sep="\t", col.names = NA)
saveRDS(degList$DEG, "./results/degMA.rds") # saves binary matrix
saveRDS(degList, "./results/degList.rds") # saves entire degList
degList <- readRDS("./results/degList.rds")
deg_logFC <- as.data.frame(degList$logFC) # 12437 X 322
degMA <- as.data.frame(degList$DEG) # 12437 X 630
degMA_cmg <- degMA[common_genes,] # 11992 X 630
degMA <- readRDS("./results/degMA.rds") # matrix 12437 322
degMA_cmg <- degMA[common_genes,] # 11992 X 630
degMA <- as.data.frame(degList$DEG) # 12437 X 630
degMA_mat <- readRDS("./results/degMA.rds") # matrix 12437 630
degMA_mat_cmg <- degMA_mat[common_genes,]
y <- as.numeric(colSums(degMA_mat_cmg))
interval <- table(cut(y, right=FALSE, dig.lab=5,  breaks=c(0, 5, 10, 50, 100, 200, 500, 1000, 10000)))
df <- data.frame(interval); colnames(df) <- c("Bins", "Counts")
library(ggplot2)
ggplot(df, aes(Bins, Counts)) +
geom_bar(position="dodge", stat="identity", fill="cornflowerblue") +
ggtitle("DEG numbers by bins")
degsum <- colSums(degMA_cmg)
degsum
degMA <- as.data.frame(degList$DEG) # 12437 X 630
degMA_cmg <- degMA[common_genes,] # 11992 X 630
deg_logFC <- as.data.frame(degList$logFC) # 12437 X 630
deg_logFC_cmg <- deg_logFC[common_genes,] # 11992 X 630
deg_fdr <- as.data.frame(degList$FDR) # 12437 X 630
deg_fdr_cmg <- deg_fdr[common_genes,] # 11992 X 630
degsum <- colSums(degMA_cmg) # 630
cmap_sig <- NULL
for(name in colnames(deg_logFC_cmg)){
name_sub <- sub("_MCF7", "", name)
fdr_l <- deg_fdr_cmg[,name] <= 0.5
logfc <- deg_logFC_cmg[,name][fdr_l]
names(logfc) <- rownames(deg_logFC_cmg)[fdr_l]
logfc_order <- logfc[order(logfc, decreasing = TRUE)]
logfc_order_up <- logfc_order[logfc_order >= 1]
logfc_order_down <- logfc_order[logfc_order <= 1]
if(length(logfc_order_up) > 100) logfc_order_up <- logfc_order_up[1:100]
if(length(logfc_order_down) > 100) logfc_order_down <- rev(logfc_order_down)[1:100]
up <- list(up = names(logfc_order_up))
down <- list(down = names(logfc_order_down))
up_down <- list(up_down = c(names(logfc_order_up), names(logfc_order_down)))
druglist <- list(drug = c(up, down, up_down))
names(druglist) <- name_sub
cmap_sig <- c(cmap_sig, druglist)
}
cmap_sig[[1]]
cmap_sig[[2]]
cmap_sig[[3]]
degsum[1:3]
names(cmap_sig[1:3])
degsum[1:10]
cmap_sig[[alfadolone_MCF7]]
cmap_sig[["alfadolone"]]
rmadf_df_cmg <- rmadf_df[common_genes,]
degList <- runLimma(df=rmadf_df_cmg, comp_list, fdr=0.50, foldchange=1, verbose=TRUE, affyid=NULL)
write.table(degList$DEG, file="./results/degMA.xls", quote=FALSE, sep="\t", col.names = NA)
saveRDS(degList$DEG, "./results/degMA.rds") # saves binary matrix
saveRDS(degList, "./results/degList.rds") # saves entire degList
degMA <- as.data.frame(degList$DEG) # 12437 X 630
deg_logFC <- as.data.frame(degList$logFC) # 11992 X 630
deg_fdr <- as.data.frame(degList$FDR) # 11992 X 630
degsum <- colSums(degMA) # 630
degMA_mat <- readRDS("./results/degMA.rds") # matrix 11992 630
cmap_sig <- NULL
for(name in colnames(deg_logFC)){
name_sub <- sub("_MCF7", "", name)
fdr_l <- deg_fdr[,name] < 0.5
logfc <- deg_logFC[,name][fdr_l]
names(logfc) <- rownames(deg_logFC)[fdr_l]
logfc_order <- logfc[order(logfc, decreasing = TRUE)]
logfc_order_up <- logfc_order[logfc_order > 1]
logfc_order_down <- logfc_order[logfc_order < -1]
if(length(logfc_order_up) > 100) logfc_order_up <- logfc_order_up[1:100]
if(length(logfc_order_down) > 100) logfc_order_down <- rev(logfc_order_down)[1:100]
up <- list(up = names(logfc_order_up))
down <- list(down = names(logfc_order_down))
up_down <- list(up_down = c(names(logfc_order_up), names(logfc_order_down)))
druglist <- list(drug = c(up, down, up_down))
names(druglist) <- name_sub
cmap_sig <- c(cmap_sig, druglist)
}
degsum[1:10]
cmap_sig[[1]]
cmap_sig[["6-benzylaminopurine"]]
cmap_sig[["alfadolone"]]
degsum[degsum > 0][1:5]
cmap_sig[["albendazole"]]
cmap_sig[["alpha-estradiol_MCF7"]]
cmap_sig[["alpha-estradiol"]]
cmap_sig[["alvespimycin"]]
lc_drugs_sig <- sub("_MCF7","",names(degsum[degsum > 0]))
lc_drugs_sig[1:4]
cmap_sig <- cmap_sig[lc_drugs_sig]
cmap_sig[[1]]
writeLines(lc_drugs_sig, "./data/lc_drugs_sig.txt")
lc_drugs_sig <- readLines("./data/lc_drugs_sig.txt") # 643
library(jsonlite)
library(tidyverse)
getSig <- function(pert_iname){
sig = NULL
for(name in pert_iname){
json <- system(paste0("curl -X GET --header 'Accept: application/json' --header 'user_key: 6e09440bcbfa67ebfac72b928d4b9366'   'https://api.clue.io/api/sigs?filter=%7B%22where%22%3A%7B%22pert_iname%22%3A%22",name,"%22%2C%22cell_id%22%3A%22MCF7%22%7D%7D'"),intern = TRUE, ignore.stderr = TRUE)
if(json == "[]"){
message("API error happens on ", name)
next()
}
jsonr <- select(as_tibble(fromJSON(json)), -pert_desc)
sig <- bind_rows(sig, jsonr)
}
return(sig)
}
sig <- getSig(lc_drugs_sig) # tibble 3145 X 41
sig_sel <- sig %>% select(pert_id, pert_iname, pert_idose, pert_itime, pert_type, zmad_ref, up100_bing, dn100_bing, up100_full, dn100_full, up50_lm, dn50_lm, distil_nsample, sig_id, ds_index, is_gold) %>% filter(pert_itime == "6 h", pert_idose == "10 µM") %>% distinct(pert_iname, .keep_all = TRUE) # 329 X 16
sig_sel
lc_drugs_sig <- tolower(sub("_MCF7","",names(degsum[degsum > 0]))) # 210
cmap_sig <- cmap_sig[lc_drugs_sig]
writeLines(lc_drugs_sig, "./data/lc_drugs_sig.txt")
lc_drugs_sig <- readLines("./data/lc_drugs_sig.txt") # 210
a <- names(cmap_sig)
sum(a != tolower(a))
a[1:4]
sum(a == tolower(a))
sum(! a %in% tolower(a))
sum( a %in% tolower(a))
a <- sig_sel %>% slice(match("albendazole"), sig_sel$pert_iname) %>% select(up100_full)
a <- sig_sel %>% slice(1) %>% select(up100_full)
a
a[1,1]
view(a[1,])
view(a[1,1])
a[[1]]
a[[1]]
class(a[[1]])
unlist(a)
class(unlist(a))
slice(sig_sel, match(c("albendazole")), sig_sel$pert_iname)
df1 <- bind_cols(data_frame(ids1=paste0("g", 1:10)), as_data_frame(matrix(1:40, 10, 4, dimnames=list(1:10, paste0("CA", 1:4)))))
slice(df1, match(c("g10", "g4", "g4"), df1$ids1))
unlist(a[[1]])
class( unlist(a[[1]]))
source("io_new.R")
l4z <- read.gctx.meta("data/GSE70138_Broad_LINCS_Level4_ZSPCINF_mlr12k_n345976x12328.gctx", dimension = "col")
library(rhdf5)
l4z_meta <- read.gctx.meta("data/GSE70138_Broad_LINCS_Level4_ZSPCINF_mlr12k_n345976x12328.gctx", dimension = "col")
source("io_new.R"); source("utils.R")
l4z_meta <- read.gctx.meta("data/GSE70138_Broad_LINCS_Level4_ZSPCINF_mlr12k_n345976x12328.gctx", dimension = "col")
l4z_meta[1:6]
l4z_meta[1:6,]
sig_info_sel <- read_tsv("data/sig_info_sel.tsv")
library(tidyverse)
lincs_sig <- readRDS("data/lincs_sig.rds") # 205
sig_info_sel <- read_tsv("data/sig_info_sel.tsv")
sig_info_sel
l4z_meta[1:6]
l4z_meta[1:6,]
l4z_row_meta <- read.gctx.meta("data/GSE70138_Broad_LINCS_Level4_ZSPCINF_mlr12k_n345976x12328.gctx", dimension = "row")
l4z_row_meta[1:6]
l4z_row_meta[1:6,]
head(l4z_row_meta)
lc_drugs_rank_final <- readLines("data/lc_drugs_rank_final")
lc_drugs_sig_final <- names(lincs_sig)
writeLines(lc_drugs_sig_final, "data/lc_drugs_sig_final")
lc_drugs_sig_final <- readLines("data/lc_drugs_sig_final")
sum(lc_drugs_sig_final %in% lc_drugs_rank_final)
lc_drugs_sig <- readLines("data/lc_drugs_sig.txt")
sum(lc_drugs_sig %in% lc_drugs_rank_final) # 112
lincs_zscore <- readRDS("data/lincs_zscore.rds")
lincs_zscore[1:6,1:6]
deg_logFC <- read.delim("results/deg_logFC.xls", sep="\t", header = TRUE, row.names = 1, check.names = FALSE)
cmap_logfc <- deg_logFC[, colnames(lincs_zscore)] # 11992 X 326
class(cmap_logfc)
write.table(cmap_logfc, "results/cmap_logfc.xls", sep="\t", col.names=NA, quote=FALSE)
cmap_logfc <- read.delim("results/cmap_logfc.xls", sep="\t", header = TRUE, row.names = 1, check.names = FALSE)
ken_cor <- read_tsv("results/ken_cor.tsv")
summary(as.numeric(ken_cor$cor))
sig_info_sel <- read_tsv("data/sig_info_sel.tsv") # 326 X 8
sig_info_sel$sig_id[1:10]
sig_sel <- readRDS("data/lincs_sig_sel_df.rds")
sig_sel$sig_id[1:10]
lincs_zscore[1:6,1:6]
cmap_logfc[1:6,1:6]
lincs_zscore[1:6,1:6]
cmap_logfc[1:6,1:6]
library(rhdf5)
source("io_new.R"); source("utils.R")
l4z_col_meta <- read.gctx.meta("data/GSE70138_Broad_LINCS_Level4_ZSPCINF_mlr12k_n345976x12328.gctx", dimension = "col")
write.table(l4z_col_meta, "data/l4z_col_meta.xls", sep="\t", col.names=NA, quote=FALSE)
l4z_col_meta <- read.delim("data/l4z_col_meta.xls", sep="\t", header = TRUE)
head(l4z_col_meta)
l4z_col_meta <- read.delim("data/l4z_col_meta.xls", sep="\t")
head(l4z_col_meta)
l4z_col_meta <- read.delim("data/l4z_col_meta.xls", sep="\t", row.names = 1)
head(l4z_col_meta)
l4z_col_meta[1:10,]
l4z_col <- read.gctx.ids("data/GSE70138_Broad_LINCS_Level4_ZSPCINF_mlr12k_n345976x12328.gctx", dimension = "col")
l4z_col[1:10]
read.delim("./data/cmap_instances_02.txt", check.names=FALSE)[1:6, 1:10]
lincs_zscore <- readRDS("data/lincs_zscore.rds")
lincs_zscore[1:6,1:6]
cmap_logfc <- read.delim("results/cmap_logfc.xls", sep="\t", header = TRUE, row.names = 1, check.names = FALSE)
cmap_logfc[1:6,1:6]
ken_cor <- read_tsv("results/ken_cor.tsv")
summary(as.numeric(ken_cor$cor))
sig_info_sel <- read_tsv("data/sig_info_sel.tsv") # 326 X 8
sig_info_sel$sig_id[1:10]
library(rhdf5)
source("io_new.R"); source("utils.R")
l4z_col <- read.gctx.ids("data/GSE70138_Broad_LINCS_Level4_ZSPCINF_mlr12k_n345976x12328.gctx", dimension = "col")
l4z_col[1:10]
sum(sig_sel$sig_id %in% l4z_col)
sum(sig_info_sel$sig_id %in% l4z_col)
sum(sig_info_sel$sig_id %in% sig_sel$sig_id)
a <- c(1,5,3,2,4)
a[order(a)]
order(a)
a <- lincs_zscore[1:6,1]
a
order(a)
a[order(a, decreasing = TRUE)]
a <- c(1,3,4,5,7,2,6,9)
b <- c(1,2,5,7,8,9,7,4)
cor(a,b, method = "kendall")
a <- c(1:8)
b <- c(8:1)
b
cor(a,b, method = "kendall")
cor(a,a, method = "kendall")
library(tidyverse)
sig_info_sel <- read_tsv("data/sig_info_sel.tsv")
sig_info_sel[1:6,]
plot(density(ken_cor$cor))
png("results/density_plot_of_kendall_correlation_of_cmap_logfc_and_lincs_zscore.png")
plot(density(ken_cor$cor))
dev.off()
read.delim("./data/cmap_instances_02.txt", check.names=FALSE)[1:6, 1:10]
library(tidyverse)
sig_info_sel <- read_tsv("data/sig_info_sel.tsv")
as.data.frame(sig_info_sel[1:6,])
lincs_zscore <- readRDS("data/lincs_zscore.rds")
lincs_zscore[1:6,1:6]
cmap_logfc <- read.delim("results/cmap_logfc.xls", sep="\t", header = TRUE, row.names = 1, check.names = FALSE)
cmap_logfc[1:6,1:6]
plot(density(ken_cor$cor))
sig_info <- as_data_frame(fread("data/GSE70138_Broad_LINCS_sig_info.txt")) # Import with fread and conversion to tibble
library(data.table)
library(tidyverse)
sig_info <- as_data_frame(fread("data/GSE70138_Broad_LINCS_sig_info.txt")) # Import with fread and conversion to tibble
a <- filter(sig_info, cell_id == "MCF7")
a[1:6,]
a[6:10,]
filter(a, pert_iname == "aminoguanidine")
a[10:20,]
filter(a, pert_iname == "pritelivir")
filter(a, pert_iname == "pritelivir")
filter(a, pert_iname == "deltaline")
filter(a, pert_iname == "benzamil")
sig_info_sel <- read_tsv("data/sig_info_sel.tsv")
summary(sig_info_sel$pert_idose)
summary(as.character(sig_info_sel$pert_idose))
table(as.character(sig_info_sel$pert_idose))
filter(sig_info_sel, pert_idose == "3.0 um")
filter(sig_info, pert_iname == "tretinoin")
filter(a, pert_iname == "tretinoin")
sessionInfo()
install.packages("colorout")
install.packages("colorout")
source("https://bioconductor.org/biocLite.R")
biocLite("AnnotationFilter")
biocLite("BiocUpgrade")
install.packages("~/Downloads/AnnotationFilter_1.0.0.tar.gz", repos = NULL, type = source)
biocLite("~/Downloads/AnnotationFilter/", type=source)
library(devtools)
install_github("https://github.com/Bioconductor-mirror/AnnotationFilter.git")
install_github("Bioconductor-mirror/AnnotationFilter")
library(AnnotationFilter)
library(VariantAnnotation)
snp_id <- readLines("data/snp_id.txt") # 21713
vcf <- readVcf("data/human_longevity_related_snp_full.vcf", "hg19" ) # 10471
library(systemPipeR); library("GenomicFeatures")
vcf <- readVcf("data/human_longevity_related_snp_full.vcf", "hg19" ) # 10471
update.packages("VariantAnnotation")
vcf <- readVcf("data/human_longevity_related_snp_full.vcf", "hg19" ) # 10471
library("tidyverse")
vcf <- readVcf("data/human_longevity_related_snp_full.vcf", "hg19" ) # 10471
pkgs <- c(
"S4Vectors", "IRanges", "GenomicRanges", "DelayedArray",
"XVector", "GenomicAlignments", "ShortRead",
"VariantAnnotation", "AnnotationHub", "GGtools",
"ggbio", "ChemmineR", "InteractionSet", "flowCore",
"GenomicTuples", "CNEr", "MultiAssayExperiment",
"genomeIntervals", "TFBSTools", "IWTomics", "spliceSites",
"podkat", "kebabs", "matter", "dada2",
"ClusterSignificance", "gespeR", "HiTC", "tigre", "soGGi"
)
update <- intersect(rownames(installed.packages()), pkgs)
biocLite(update, type="source", ask=FALSE)
vcf <- readVcf("data/human_longevity_related_snp_full.vcf", "hg19" ) # 10471
biocLite(c("BiocGenerics", "S4Vectors", "IRanges", "GenomicRanges"),
type="source")
vcf <- readVcf("data/human_longevity_related_snp_full.vcf", "hg19" ) # 10471
pkgs <- c(
"S4Vectors", "IRanges", "GenomicRanges", "DelayedArray",
"XVector", "GenomicAlignments", "ShortRead",
"VariantAnnotation", "AnnotationHub", "GGtools",
"ggbio", "ChemmineR", "InteractionSet", "flowCore",
"GenomicTuples", "CNEr", "MultiAssayExperiment",
"genomeIntervals", "TFBSTools", "IWTomics", "spliceSites",
"podkat", "kebabs", "matter", "dada2",
"ClusterSignificance", "gespeR", "HiTC", "tigre", "soGGi"
)
biocLite(pkgs, type="source", ask=FALSE)
vcf <- readVcf("data/human_longevity_related_snp_full.vcf", "hg19" ) # 10471
install.packages('vcfR')
vcf <- readVcf("data/human_longevity_related_snp_full.vcf", "hg19" ) # 10471
vcf <- read.vcfR("data/human_longevity_related_snp_full.vcf", verbose = FALSE)
library(vcfR)
library(systemPipeR); library("GenomicFeatures")
vcf <- read.vcfR("data/human_longevity_related_snp_full.vcf", verbose = FALSE)
vcf
rd <- rowRanges(vcf)
library(IRanges)
c(IRanges(), IRanges())
c(RangedData(), RangedData())
library(GenomicRanges)
c(IRanges(), IRanges())
c(GRanges(), GRanges())
shiny::runApp('project/hl/geneTargetAnno')
runApp('project/hl/geneTargetAnno')
runApp('project/hl/geneTargetAnno')
runApp('project/hl/geneTargetAnno')
runApp('project/hl/geneTargetAnno')
runApp('project/hl/geneTargetAnno')
runApp('project/hl/geneTargetAnno')
runApp('project/hl/geneTargetAnno')
runApp('project/hl/geneTargetAnno')
runApp('project/hl/geneTargetAnno')
runApp('project/hl/geneTargetAnno')
